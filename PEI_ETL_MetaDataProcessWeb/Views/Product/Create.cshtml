@model PEI_ETL.Services.DTO.ProductDetailsDTO

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>ProductDetailsDTO</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Create", "Product", FormMethod.Post))
        {
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label">ProductName: </label>
                @Html.TextBoxFor(m => m.ProductName)
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductDescription" class="control-label">Description: </label>
                @Html.TextBoxFor(m => m.ProductDescription)
                <span asp-validation-for="ProductDescription" class="text-danger"></span>
            </div>
                <div class="form-group">
                <label asp-for="ProductStock" class="control-label">ProductStock: </label>
                @Html.TextBoxFor(m => m.ProductStock)
                <span asp-validation-for="ProductStock" class="text-danger"></span>
                </div>
            <div class="form-group">
                <label asp-for="ProductPrice" class="control-label">ProductPrice: </label>
                @Html.TextBoxFor(m => m.ProductPrice)
                <span asp-validation-for="ProductPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" value="Create" class="btn btn-primary">Create</button>
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}